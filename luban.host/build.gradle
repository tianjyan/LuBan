import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'
apply plugin: 'dagger.hilt.android.plugin'

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def buildTime() {
    def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
    df.setTimeZone(TimeZone.getTimeZone("UTC"))
    Calendar date = new GregorianCalendar();
    date.set(Calendar.HOUR_OF_DAY, 0);
    date.set(Calendar.MINUTE, 0);
    date.set(Calendar.SECOND, 0);
    date.set(Calendar.MILLISECOND, 0);
    return df.format(date.getTime())
}

android {
    compileSdkVersion versions.targetSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId "org.tianjyan.luban.host"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name
        buildConfigField "boolean", "ENABLE_LEAK_CANARY", "false"
        buildConfigField "String", "GIT_COMMIT_SHA", '"' + gitSha() + '"'
        buildConfigField "String", "BUILD_TIME", '"' + buildTime() + '"'
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    annotationProcessor "com.google.dagger:hilt-android-compiler:$versions.hilt"

    implementation libs.aidl

    annotationProcessor libs.butterknifecompiler

    implementation libs.appcompat
    implementation libs.supportv4
    implementation libs.recyclerview

    implementation libs.butterknife
    implementation libs.eventbus
    implementation libs.rxjava
    implementation libs.rxandroid

    implementation libs.annotations

    implementation libs.stetho
    debugImplementation libs.leakcanary
    implementation libs.logger
}

task styleCheck(type: Checkstyle) {
    configFile new File(rootDir, "config/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**', '**/mobeta/**'

    classpath = files()
}